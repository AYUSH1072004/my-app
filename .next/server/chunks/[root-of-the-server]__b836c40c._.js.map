{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///D:/Ram/my-app/src/app/api/signin/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\ntype User = {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Dummy users list (simulate DB)\r\nconst users: User[] = [\r\n    { name: '', email: '', password: '' },\r\n];\r\n\r\nexport async function POST(req: NextRequest) {\r\n    const { email, password } = await req.json();\r\n\r\n    if (!email || !password) {\r\n        return NextResponse.json({ message: 'Email and password are required' }, { status: 400 });\r\n    }\r\n\r\n    const user = users.find(u => u.email === email && u.password === password);\r\n\r\n    if (!user) {\r\n        return NextResponse.json({ message: 'Invalid email or password' }, { status: 401 });\r\n    }\r\n\r\n    return NextResponse.json({ message: 'Login successful', user }, { status: 200 });\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAQA,iCAAiC;AACjC,MAAM,QAAgB;IAClB;QAAE,MAAM;QAAI,OAAO;QAAI,UAAU;IAAG;CACvC;AAEM,eAAe,KAAK,GAAgB;IACvC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,IAAI,CAAC,SAAS,CAAC,UAAU;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAkC,GAAG;YAAE,QAAQ;QAAI;IAC3F;IAEA,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;IAEjE,IAAI,CAAC,MAAM;QACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACrF;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAoB;IAAK,GAAG;QAAE,QAAQ;IAAI;AAClF","debugId":null}}]
}